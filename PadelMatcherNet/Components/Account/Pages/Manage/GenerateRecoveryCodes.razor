@page "/Account/Manage/GenerateRecoveryCodes"

@using Microsoft.AspNetCore.Identity
@using PadelMatcherNet.Data
@using System.Text

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<GenerateRecoveryCodes> Logger

<PageTitle>Generate two-factor authentication (2FA) recovery codes</PageTitle>

@if (recoveryCodes is not null)
{
    <ShowRecoveryCodes RecoveryCodes="recoveryCodes.ToArray()" StatusMessage="@message" />
    
    <div class="mt-3">
        <a href="@downloadUrl" download="@fileName" class="btn btn-success" style="@(string.IsNullOrEmpty(downloadUrl) ? "display:none;" : "")">
            <i class="fas fa-download"></i> Salva Recovery Codes come File
        </a>
        <small class="form-text text-muted d-block mt-1">
            Salva questi codici in un posto sicuro. Li puoi stampare o conservare offline.
        </small>
    </div>
}
else
{
    <h3>Generate two-factor authentication (2FA) recovery codes</h3>
    <div class="alert alert-warning" role="alert">
        <p>
            <span class="glyphicon glyphicon-warning-sign"></span>
            <strong>Put these codes in a safe place.</strong>
        </p>
        <p>
            If you lose your device and don't have the recovery codes you will lose access to your account.
        </p>
        <p>
            Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key
            used in an authenticator app you should <a href="Account/Manage/ResetAuthenticator">reset your authenticator keys.</a>
        </p>
    </div>
    <div>
        <form @formname="generate-recovery-codes" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken />
            <button class="btn btn-danger" type="submit">Generate Recovery Codes</button>
        </form>
    </div>
}

@code {
    private string? message;
    private ApplicationUser user = default!;
    private IEnumerable<string>? recoveryCodes;
    private string? downloadUrl;
    private string fileName = string.Empty;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        var isTwoFactorEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        if (!isTwoFactorEnabled)
        {
            throw new InvalidOperationException("Cannot generate recovery codes for user because they do not have 2FA enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var userId = await UserManager.GetUserIdAsync(user);
        recoveryCodes = await UserManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);
        message = "You have generated new recovery codes.";

        // Genera il file di download
        GenerateDownloadFile();

        Logger.LogInformation("User with ID '{UserId}' has generated new 2FA recovery codes.", userId);
    }
    private void GenerateDownloadFile()
    {
        if (recoveryCodes == null) return;

        var content = GenerateRecoveryCodesContent();
        var bytes = Encoding.UTF8.GetBytes(content);
        var base64 = Convert.ToBase64String(bytes);
        
        downloadUrl = $"data:text/plain;charset=utf-8;base64,{base64}";
        fileName = $"recovery-codes-{DateTime.Now:yyyy-MM-dd-HHmm}.txt";
    }

    private string GenerateRecoveryCodesContent()
    {
        if (recoveryCodes == null) return string.Empty;

        var sb = new StringBuilder();
        sb.AppendLine("===========================================");
        sb.AppendLine("CODICI DI RECUPERO AUTENTICAZIONE A DUE FATTORI");
        sb.AppendLine("===========================================");
        sb.AppendLine();
        sb.AppendLine($"Account: {user.Email}");
        sb.AppendLine($"Data generazione: {DateTime.Now:dd/MM/yyyy HH:mm}");
        sb.AppendLine();
        sb.AppendLine("ATTENZIONE:");
        sb.AppendLine("- Conserva questi codici in un posto sicuro");
        sb.AppendLine("- Ogni codice può essere usato una sola volta");
        sb.AppendLine("- Se perdi il tuo dispositivo, puoi usare questi codici per accedere");
        sb.AppendLine("- Generare nuovi codici renderà questi inutilizzabili");
        sb.AppendLine();
        sb.AppendLine("CODICI DI RECUPERO:");
        sb.AppendLine("===================");
        
        foreach (var code in recoveryCodes)
        {
            sb.AppendLine(code);
        }
        
        sb.AppendLine();
        sb.AppendLine("===========================================");
        sb.AppendLine("CONSERVA QUESTO FILE IN UN POSTO SICURO!");
        sb.AppendLine("===========================================");

        return sb.ToString();
    }

}
